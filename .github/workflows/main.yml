name: Testing
on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY}}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-root --no-interaction

      - name: Testing
        run: python manage.py test
        env:
          DB_NAME: ${{ env.DB_NAME }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}










